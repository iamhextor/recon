import requests
import dns.resolver
from termcolor import colored

resolver = dns.resolver.Resolver()
resolver.lifetime = 10

with open('urls.txt') as f:
    urls = [url.strip() for url in f.readlines()]

for url in urls:
    print(url)
    print()

    # Check for SPF record
    try:
        spf = resolver.query(url, 'TXT')
        txt_records = [str(record) for record in spf]
        if 'v=spf1' in ''.join(txt_records):
            print(colored('SPF record found', 'green'))
        else:
            print(colored('SPF record not found', 'red'))
        print('TXT records:')
        for record in txt_records:
            print(record)
    except:
        print(colored('SPF record not found', 'red'))

    # Check for DMARC record
    try:
        dmarc = resolver.query('_dmarc.' + url, 'TXT')
        txt_records = [str(record) for record in dmarc]
        if 'v=DMARC1' in ''.join(txt_records):
            print(colored('DMARC record published', 'green'))

            policy = ''
            for item in str(dmarc[0]).split(';'):
                item = item.strip()
                if item.startswith('p='):
                    policy = item[2:]
                    break

            if policy == 'none':
                print(colored('DMARC policy not enabled', 'yellow'))
            elif policy in ['quarantine', 'reject']:
                print(colored(f'DMARC policy set to {policy}', 'green'))
            else:
                print(colored('Invalid DMARC policy', 'red'))
        else:
            print(colored('DMARC record not published', 'red'))
            print(colored('DMARC policy status: N/A', 'yellow'))
        print('TXT records:')
        for record in txt_records:
            print(record)
    except:
        print(colored('DMARC record not published', 'red'))
        print(colored('DMARC policy status: N/A', 'yellow'))

    # Check for DNS record
    try:
        ip = resolver.query(url, 'A')
        print(colored('DNS record published', 'green'))
    except dns.resolver.NXDOMAIN:
        print(colored('DNS record not published', 'red'))
    except dns.resolver.NoAnswer:
        print(colored('DNS resolution error', 'red'))

    print('==========')
