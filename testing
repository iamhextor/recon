
import requests
import xml.etree.ElementTree as ET
import logging

# Set up logging
logging.basicConfig(level=logging.DEBUG)

# Set up the Qualys API credentials
username = 'your_username'
password = 'your_password'
api_url = 'https://qualysapi.qualys.com/api/2.0/fo/'

# Set up the parameters for the API request
url = 'https://example.com'
report_type = 'sitemap'  # 'sitemap' or 'crawl'

# Set up the API request XML body
xml_body = f'''
<QualysGuardReport2>
  <ServiceRequest>
    <data>
      <Report>
        <name>{url} {report_type} report</name>
        <description>{url} {report_type} report</description>
        <type>{report_type}</type>
        <format>xml</format>
        <filters>
          <Criteria field="url">{url}</Criteria>
        </filters>
      </Report>
    </data>
  </ServiceRequest>
</QualysGuardReport2>
'''

# Make the API request
response = requests.post(api_url, data={'action': 'launch', 'report_type': report_type, 'echo_request': xml_body},
                         auth=(username, password), verify=False)

# Check if the API request was successful
if response.status_code != 200:
    logging.error(f"API request failed with status code {response.status_code}")
    logging.error(response.text)
    exit()

# Parse the response XML
response_xml = ET.fromstring(response.text)
value_element = response_xml.find('.//VALUE')

if value_element is None:
    logging.error("Could not find VALUE element in response XML")
    logging.error(response.text)
    exit()

report_id = value_element.text

# Download the report file
response = requests.get(api_url, params={'action': 'fetch', 'id': report_id},
                        auth=(username, password), verify=False)

# Check if the report download was successful
if response.status_code != 200:
    logging.error(f"Report download failed with status code {response.status_code}")
    logging.error(response.text)
    exit()

# Write the report file to disk
with open(f"{url}_{report_type}_report.xml", 'wb') as f:
    f.write(response.content)
    
print(f"Report downloaded to {url}_{report_type}_report.xml")
