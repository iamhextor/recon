import requests
import json

# Set your Nexpose API credentials
nexpose_username = "your_username"
nexpose_password = "your_password"

# Set the URL to the API endpoint for site listing
api_url = "https://your.nexpose.server/api/3/sites"

# Set the API request headers
headers = {'content-type': 'application/json'}

# Authenticate with the API using your credentials
auth_request = requests.post(api_url + "/authenticate", auth=(nexpose_username, nexpose_password), headers=headers)

# Check if the authentication request was successful
if auth_request.status_code != 200:
    print("Authentication failed with status code " + str(auth_request.status_code))
    exit()

# Get the session ID from the authentication response
try:
    session_id = auth_request.json()['token']
except KeyError:
    print("Authentication failed - response does not contain a session token")
    exit()

# Set the API request headers to include the session ID
headers['nexposeCCSessionID'] = session_id

# Send a GET request to the API endpoint to list all sites
sites_request = requests.get(api_url, headers=headers)

# Check if the sites request was successful
if sites_request.status_code != 200:
    print("Failed to get sites list with status code " + str(sites_request.status_code))
    exit()

# Parse the JSON response from the API
sites = sites_request.json()['resources']

# Open a text file to write the results to
with open("nexpose_scan_dates.txt", "w") as f:
    # Loop through each site and get the last scan date
    for site in sites:
        site_id = site['id']
        site_name = site['name']
        last_scan_date = None
        
        # Send a GET request to the API endpoint for the site details
        site_request = requests.get(api_url + "/" + str(site_id), headers=headers)
        
        # Check if the site request was successful
        if site_request.status_code != 200:
            print("Failed to get site details for site " + site_name + " with status code " + str(site_request.status_code))
            continue
        
        # Parse the JSON response from the API
        site_details = site_request.json()
        
        # Check if there are any scan results for the site
        if 'scanResults' in site_details:
            # Get the latest scan result for the site
            latest_scan_result = max(site_details['scanResults'], key=lambda x:x['startTime'])
            
            # Get the start time of the latest scan result
            last_scan_date = latest_scan_result['startTime']
        
        # Write the site name and last scan date to the text file
        f.write(site_name + "=" + str(last_scan_date) + "\n")
        
        # Print the site name and last scan date
        print(site_name + "=" + str(last_scan_date))
