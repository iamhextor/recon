from concurrent.futures import ThreadPoolExecutor
from getpass import getpass
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

username = input("Username (E-id): ")
password = getpass("Password: ")
ips_to_search = []
with open("ips.txt", "r") as f:
    ips_to_search = [ip.strip() for ip in f.readlines()]

sites = []
with requests.Session() as session:
    session.auth = (username, password)
    session.verify = False

    # Get all the sites
    sites_url = "https://nexpose_ip:port/api/3/sites?page=0&size=500&sort=id,asc"
    while sites_url is not None:
        response = session.get(sites_url)
        if response.status_code != 200:
            print(f"Error retrieving sites: {response.status_code} {response.reason}")
            exit()
        sites_data = response.json()
        sites.extend(sites_data["resources"])
        sites_url = sites_data["links"].get("next")

def search_ip_in_site(site):
    site_id = site["id"]
    site_name = site["name"]

    with requests.Session() as session:
        session.auth = (username, password)
        session.verify = False

        # Get the assets of the site
        assets_url = f"https://nexpose_ip:port/api/3/sites/{site_id}/assets"
        assets = []
        while assets_url is not None:
            response = session.get(assets_url)
            if response.status_code != 200:
                print(f"Error retrieving assets of site {site_id}: {response.status_code} {response.reason}")
                exit()
            assets_data = response.json()
            assets.extend(assets_data["resources"])
            assets_url = assets_data["links"].get("next")

        # Check if any of the IP addresses is in the assets of the site
        found = False
        for asset in assets:
            ip_address = asset.get("ipAddresses", [])[0]
            if ip_address in ips_to_search:
                found = True
                break

        if found:
            print(f"IP address found in site {site_name}")

# Search for the IP addresses in all the sites
with ThreadPoolExecutor() as executor:
    executor.map(search_ip_in_site, sites)

print("Done")
